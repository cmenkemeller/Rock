<template>
    <GalleryAndResult :value="value" :importCode="importCode" :exampleCode="exampleCode" enableReflection>

        <CustomSelect v-model="value" :items="items" itemKey="value" #default="{ item }" label="Custom Select" itemClass="my-item">
            <i class="fa fa-user mr-3 text-success"></i>
            <h3 class="my-0">{{ item.text }}</h3>
        </CustomSelect>

        <template #settings>
            <div class="row">
                <div class="col-md-3">
                </div>
            </div>
        </template>
    </GalleryAndResult>
</template>

<style>
.my-item {
    background: #f5f5f5;
    border: 1px solid #ccc;
    border-top-width: 0;
    padding: 1rem;
    display: flex;
    align-items: center;
}

.my-item.selected {
    background: #fff;
}

.my-item:first-child {
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    border-top-width: 1px;
}

.my-item:last-child {
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}
</style>

<script setup lang="ts">
    import { computed, ref } from "vue";
    import GalleryAndResult from "./galleryAndResult.partial.obs";
    import CustomSelect from "@Obsidian/Controls/customSelect.obs";
    import { getSfcControlImportPath } from "./utils.partial";

    const items = ref([
        { value: 1, text: "One" },
        { value: 2, text: "Two" },
        { value: 3, text: "Three" },
        { value: 4, text: "Four" },
        { value: 5, text: "Five" },
        { value: 6, text: "Six" },
        { value: 7, text: "Seven" },
        { value: 8, text: "Eight" },
        { value: 9, text: "Nine" },
        { value: 10, text: "Ten" }
    ]);
    const value = ref(items.value[0]);

    // TODO: REMOVE
    const someBool = ref(false);
    const someVal = ref("hi");

    const importCode = getSfcControlImportPath("customSelect");
    const exampleCode = computed(() => {
        const someBoolProp = someBool.value ? " someBool" : "";
        const someValProp = someVal.value ? ` someVal="${someVal.value}"` : "";
        return `<CustomSelect v-model="value"${someBoolProp}${someValProp} />`;
    });
</script>