<template>
    <GalleryAndResult :importCode="importCode" :exampleCode="exampleCode">

        <AssetAndFileManager :height="height" v-model="value" v-model:openFolders="openFolders" :enableAssetManager="enableAssetManager" :enableFileManager="enableFileManager" :enableZipUpload="enableZipUpload" :encryptedRootFolder="encryptedRootFolder" />

        <div class="my-5">
            <label>Selected Files:</label> {{ value }}
            <label>Open Folders:</label> {{ openFolders }}
        </div>

        <template #settings>
            <div class="row">
                <div class="col-md-3">
                    <CheckBox v-model="isStaticHeight" label="Use Static Height?" />
                </div>
                <div class="col-md-3">
                    <CheckBox v-model="enableFileManager" label="Enable File Browser" help="If true, a folder will appear in the left column hooked to a folder on the server, the root of which is configurable." />
                </div>
                <div class="col-md-3">
                    <CheckBox v-model="enableAssetManager" label="Enable Asset Storage Providers" help="If true, all asset storage providers configured in system settings will appear in the left column." />
                </div>
                <div class="col-md-3">
                    <CheckBox v-model="enableZipUpload" label="Enable Uploading Zip Packages" help="If true, zip files can be uploaded to local file servers and they will be automatically unzipped and have their contents placed in the selected folder." />
                </div>
            </div>
            <div class="row">
                <div class="col-md-3" :style="{ visibility: isStaticHeight ? 'visible' : 'hidden' }">
                    <TextBox v-model="staticHeight" label="Static Height" help="You may use any valid CSS height value. If you enter `flexible`, it is the same as not specifying a value (disables static height; this is the default)" />
                </div>
                <div class="col-md-3" :style="{ visibility: enableFileManager ? 'visible' : 'hidden' }">
                    <TextBox v-model="encryptedRootFolder" label="File Browser Root Folder" help="Default is ~/Content/" />
                </div>
            </div>
        </template>
    </GalleryAndResult>
</template>

<script setup lang="ts">
    import { computed, ref } from "vue";
    import GalleryAndResult from "./galleryAndResult.partial.obs";
    import AssetAndFileManager from "@Obsidian/Controls/assetAndFileManager.obs";
    import CheckBox from "@Obsidian/Controls/checkBox.obs";
    import TextBox from "@Obsidian/Controls/textBox.obs";
    import { getSfcControlImportPath } from "./utils.partial";
    import { FileAsset } from "@Obsidian/ViewModels/Controls/fileAsset";

    const value = ref<FileAsset[]>([]);
    const openFolders = ref<string[]>(["0,EAAAABoMLQ7sxQnuAw5xJ6fMyNpOWavdmnjvI21yclYPMFnm,,True", "0,EAAAAE7cu51UBwj12ozhSL3ocnErk4IIkGrNdWKOW0qL/ReB,ExternalSite/"]);

    const isStaticHeight = ref(true);
    const staticHeight = ref("400px");
    const height = computed(() => isStaticHeight.value ? staticHeight.value : "flexible");
    const enableAssetManager = ref(true);
    const enableFileManager = ref(true);
    const enableZipUpload = ref(true);
    // ~/
    const encryptedRootFolder = ref("EAAAAOkA/1SamAbdx1EJX3OXaY7FkiG6ha9rDeDXaRPjfGcr");
    // ~/Content
    // const encryptedRootFolder = ref("EAAAADKu4UpeD3p9uFXZ5WLZMaToEPXLfHZ6a0U7LuvfyZUy");

    const importCode = getSfcControlImportPath("assetAndFileManager");
    const exampleCode = computed(() => {
        const enableAssetManagerProp = enableAssetManager.value ? " enableAssetManager" : "";
        const enableFileManagerProp = enableFileManager.value ? " enableFileManager" : "";
        const enableZipUploadProp = enableZipUpload.value ? " enableZipUpload" : "";
        const heightProp = isStaticHeight.value ? ` height="${height.value}"` : "";
        const rootFolderProp = enableFileManager.value ? ` encryptedRootFolder="${encryptedRootFolder.value}"` : "";
        return `<AssetAndFileManager v-model="value"${rootFolderProp}${enableAssetManagerProp}${enableFileManagerProp}${enableZipUploadProp}${heightProp} />`;
    });
</script>