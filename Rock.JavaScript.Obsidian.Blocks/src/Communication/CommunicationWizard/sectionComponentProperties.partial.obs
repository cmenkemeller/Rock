<template>
    <template v-if="selectedComponent.componentElement">
        <Panel v-model="isRowSettingsExpanded"
               :hasCollapse="true"
               title="Row Settings">
            <BackgroundColor :modelValue="selectedComponent.componentElement" />
            <Border :modelValue="selectedComponent.componentElement" />
        </Panel>

        <Panel v-model="isColumnsExpanded"
               :hasCollapse="true"
               title="Columns">
            <BackgroundColor :modelValue="selectedComponent.componentElement" />
            <ElementBorderWidth :modelValue="selectedComponent.componentElement" />
            <BorderColor :modelValue="selectedComponent.componentElement" />
        </Panel>
    </template>
</template>

<style scoped>
:deep(.panel) {
    margin-bottom: 0;
}
</style>

<script setup lang="ts">
    import { PropType, ref, watch } from "vue";
    import BackgroundColor from "./inlineStyleEditors/backgroundColor.partial.obs";
    import Border from "./inlineStyleEditors/border.partial.obs";
    import { EditorComponent } from "./types.partial";
    import Panel from "@Obsidian/Controls/panel.obs";

    const props = defineProps({
        selectedComponent: {
            type: Object as PropType<EditorComponent>,
            required: true
        }
    });

    // #region Values

    const backgroundColor = ref<string>(props.selectedComponent?.componentElement.style.backgroundColor ?? "");
    const isRowSettingsExpanded = ref<boolean>(true);
    const isColumnsExpanded = ref<boolean>(false);

    // #endregion

    // #region Watchers

    watch(() => props.selectedComponent, () => {
        backgroundColor.value = props.selectedComponent?.componentElement.style.backgroundColor ?? "";
    });

    watch(isRowSettingsExpanded, isExpanded => {
        if (isExpanded) {
            // Collapse other panels.
            isColumnsExpanded.value = false;
        }
    });

    watch(isColumnsExpanded, isExpanded => {
        if (isExpanded) {
            // Collapse other panels.
            isRowSettingsExpanded.value = false;
        }
    });

    // #endregion
</script>