<template>
    <div ref="slotElement">
        <slot></slot>
    </div>
</template>

<script setup lang="ts">
    import { ref, onMounted, onBeforeUnmount } from "vue";

    const slotElement = ref<HTMLElement | null>(null);
    const observer = ref<MutationObserver | null>(null);

    const emit = defineEmits<{
        (e: "update:html", value: string): void;
    }>();

    function update(): void {
        if (slotElement.value) {
            emit("update:html", slotElement.value.innerHTML);
        }
        else {
            emit("update:html", "");
        }
    }

    onMounted(() => {
        if (slotElement.value) {
            observer.value = new MutationObserver(update);

            observer.value.observe(slotElement.value, {
                childList: true,
                subtree: true,
            });

            update();
        }
    });

    onBeforeUnmount(() => {
        if (observer.value) {
            observer.value.disconnect();
        }
    });
</script>