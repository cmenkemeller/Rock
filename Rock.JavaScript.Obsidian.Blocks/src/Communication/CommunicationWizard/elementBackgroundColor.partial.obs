<template>
    <ColorPicker :modelValue="modelValue"
                 @update:modelValue="onUpdateModelValue"
                 label="Background Color" />
</template>

<script setup lang="ts">
    import { PropType, ref, watch } from "vue";
    import ColorPicker from "@Obsidian/Controls/colorPicker.obs";

    const props = defineProps({
        htmlElement: {
            type: Object as PropType<HTMLElement>,
            required: true
        }
    });

    // #region Values

    const modelValue = ref<string>(props.htmlElement.style.backgroundColor ?? "");

    // #endregion

    // #region Event Handlers

    function onUpdateModelValue(value: string): void {
        setValue(value);
    }

    // #endregion

    // #region Functions

    function setValue(value: string): void {
        modelValue.value = value;
        props.htmlElement.style.backgroundColor = value;
    }

    // #endregion

    // #region Watchers

    watch(() => props.htmlElement, () => {
        setValue(props.htmlElement.style.backgroundColor);
    });

    // #endregion
</script>