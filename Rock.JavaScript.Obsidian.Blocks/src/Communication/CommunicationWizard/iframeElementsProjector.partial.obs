<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <HtmlElementsExtractor @update:elements="onUpdateElements">
        <slot></slot>
    </HtmlElementsExtractor>
    <iframe ref="iframe" v-bind="$attrs"></iframe>
</template>

<script setup lang="ts">
    import { PropType, ref } from "vue";
    import HtmlElementsExtractor from "./htmlElementsExtractor.partial.obs";

    defineProps({
        width: {
            type: String as PropType<string | number | undefined>
        },
        height: {
            type: String as PropType<string | number | undefined>
        }
    });
    const iframe = ref<HTMLIFrameElement | undefined>();

    function onUpdateElements(elements: Node[]): void {
        const iframeBody = iframe.value?.contentDocument?.body;

        if (iframeBody) {
            for (const element of elements) {
                iframeBody.appendChild(element);
            }
        }
    }

</script>